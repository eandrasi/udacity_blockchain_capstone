// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const verifier = artifacts.require('Verifier')
const { proof, inputs } = require('../../zokrates/code/square/proof')
const truffleAssert = require('truffle-assertions')



contract('verifierTest', accounts => {
    beforeEach(async function() {
        this.contract = await verifier.new()
    })
    
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it("can verify with correct proofs", async function() {
        let verify = await this.contract.verifyTx(proof.a, proof.b, proof.c, inputs)
        truffleAssert.eventEmitted(verify, "Verified")
    })

    // Test verification with incorrect proof
    it("will fail if incorrect parameters are given", async function() {
        // changed the first no from 3 to 1
        let fake = ["0x10433dceec04e73119069cffea2646f2a857b8e67eb9b469338a9bfc1e91a757", 
                    "0x04e2a76de3bb6d2052446b75197afb887441b5a7c670dedd12e069138ad7c57f"]

        await truffleAssert.fails(this.contract.verifyTx(fake, proof.b, proof.c, inputs),
                                    truffleAssert.ErrorType.INVALID_OPCODE)
    })

})